name: Create or Update Repository

on:
  workflow_dispatch:
    inputs:
      repo_name:
        description: 'Name of the repository to create'
        required: true
        type: string
        default: 'my-repo'
      is_public_repo:
        description: 'If unchecked, the repository will be private'
        required: true
        default: false
        type: boolean
      package_import_name:
        description: 'Used in imports, e.g. from my_package import my_module'
        required: true
        default: 'my_package'
        type: string

env:
  GH_TOKEN: ${{secrets.PERSONAL_GITHUB_TOKEN}}


jobs:
  create-repo-if-not-exists:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure git user
        run: |
          git config --global user.email "git-bot-user@python-course.com"
          git config --global user.name "Git Bot User"
      - run: |
          bash -x run.sh create-repo-if-not-exists
        env:
          REPO_NAME: ${{ github.event.inputs.repo_name }}
          GITHUB_USERNAME: sahlas
          IS_PUBLIC_REPO: ${{ github.event.inputs.is_public_repo }}

  configure-repo:
      needs: [create-repo-if-not-exists]
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure git user
        run: |
          git config --global user.email "git-bot-user@python-course.com"
          git config --global user.name "Git Bot User"
      - run: |
          bash -x run.sh configure-repo
        env:
          REPO_NAME: ${{ github.event.inputs.repo_name }}
          GITHUB_USERNAME: sahlas
          TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
          PROD_PYPI_TOKEN: ${{ secrets.PROD_PYPI_TOKEN }}


  open-pr-with-generated-project:
    needs: [create-repo-if-not-exists]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure git user
        run: |
          git config --global user.email "git-bot-user@python-course.com"
          git config --global user.name "Git Bot User"
      - run: |
          bash -x run.sh open-pr-with-generated-project
        env:
          REPO_NAME: ${{ github.event.inputs.repo_name }}
          PACKAGE_IMPORT_NAME: ${{ github.event.inputs.package_import_name}}
          GITHUB_USERNAME: sahlas
          TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
          PROD_PYPI_TOKEN: ${{ secrets.PROD_PYPI_TOKEN }}
