name: Build and Test

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  check-version-txt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Tag with the release version
        run: |
          git tag $(cat version.txt)

  lint-format-and-static-analysis:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
            python-version: 3.13
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install Python dependencies
        run: |
              python -m pip install pre-commit
      - name: Lint, format and static analysis
        run: |
              /bin/bash -x ./run.sh lint:ci


  execute-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: 3.13
      - name: Configure Git CLI
        run: |
          git config --global user.email "git-bot-user@python-course.com"
          git config --global user.name "Git Bot User"

      - name: Run tests
        run: |
          make install
          make test

  push-tags:
    needs:
      - execute-tests
      - lint-format-and-static-analysis
      - check-version-txt
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags
      - name: Configure Git CLI
        run: |
          git config --global user.email "git-bot-user@python-course.com"
          git config --global user.name "Git Bot User"
      - name: Push tags
        run: |
          git push origin --tags


  # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/accessing-contextual-information-about-workflow-runs#example-printing-context-information-to-the-log
  dump_contexts_to_log:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump secrets context
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
        run: echo "$SECRETS_CONTEXT"
      - name: Dump runner context
        env:
          VARS_CONTEXT: ${{ toJson(vars) }}
        run: echo "$VARS_CONTEXT"
